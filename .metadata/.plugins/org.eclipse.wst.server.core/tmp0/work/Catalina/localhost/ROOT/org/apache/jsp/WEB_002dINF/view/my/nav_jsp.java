/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M21
 * Generated at: 2017-09-18 09:31:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.my;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class nav_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/국기%204월(오후)%20박보라/MyType/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/workProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1502088492389L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--navbar menu-->\r\n");
      out.write("\t<nav class=\"navbar navbar-default nav-sub\" style=\"border-top-style: none; min-height: 45px;\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"collapse navbar-collapse header-right-menu\"\r\n");
      out.write("\t\t\t\tid=\"navbar-primary-collapse\" style=\"padding: 0px;\">\r\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav navbar-left\">\r\n");
      out.write("\t\t\t\t\t<li class=\"\"><a class=\"\" href=\"/my/home\" style=\"padding: 5px; padding-left: 10px; padding-right:10px; height: 5px;\">My 홈</a></li>\r\n");
      out.write("\t\t\t\t\t<li class=\"dropdown gd\"><a class=\"dropdown-toggle\" href=\"#\" style=\"padding: 5px;\">구독</a>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"dropdown-menu\">\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/subscribe/blog.mt\">구독한 블로그</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/subscribe/tag.mt\">(미완)구독한 태그</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li> \r\n");
      out.write("\t\t\t\t\t<li class=\"dropdown gd\"><a class=\"dropdown-toggle\" href=\"#\" style=\"padding: 5px; padding-left: 10px; padding-right:10px;\">라이브러리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"dropdown-menu\">\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/library/postgood\">(미완)좋아요</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/library/purchases\">(미완)구매 항목</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li> \r\n");
      out.write("\t\t\t\t\t<li class=\"dropdown gd\"><a class=\"dropdown-toggle\" href=\"#\" style=\"padding: 5px; padding-left: 10px; padding-right:10px;\">포인트</a>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"dropdown-menu\">\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/point/plist\">사용내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/point/charge\">충전하기</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/point/clist\">충전내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/point/withdraw\">출금하기</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/point/wlist\">출금내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li> \r\n");
      out.write("\t\t\t\t\t<li class=\"dropdown gd\"><a class=\"dropdown-toggle\" href=\"#\" style=\"padding: 5px; padding-left: 10px; padding-right:10px;\">설정</a>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"dropdown-menu\">\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/settings/account\">계정 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/settings/profile\">프로필 편집</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/settings/password\">비밀번호 변경</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/my/settings/bank\">출금계좌 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li> \r\n");
      out.write("\t\t\t\t\t<li class=\"dropdown gd\"><a class=\"dropdown-toggle\" href=\"#\" style=\"padding: 5px; padding-left: 10px; padding-right:10px;\">쪽지</a>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"dropdown-menu\">\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/mail/write.mt\">쪽지보내기</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/mail/list.mt?type=send\">보낸쪽지함</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/mail/list.mt?type=receive\">받은쪽지함</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li> \r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(window).scroll(function() {\r\n");
      out.write("\t\tif ($(this).scrollTop() > 1) {\r\n");
      out.write("\t\t\t$(\".nav-sub\").css(\"margin-top\",\"70px\");\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\".nav-sub\").css(\"margin-top\",\"0px\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
